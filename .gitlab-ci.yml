stages:
  - build
  - forge
  - test

variables:
  YARN_CACHE_DIR: "$CI_PROJECT_DIR/.yarn-cache"


include:
  - template: Jobs/SAST.gitlab-ci.yml

sast:
  needs:
  - job: run-tests
    optional: true


.rules:

  always:
    # branch pipelines
    - if: '$CI_COMMIT_BRANCH && $CI_OPEN_MERGE_REQUESTS == null && $CI_PIPELINE_SOURCE == "web"'
    - if: '$CI_COMMIT_BRANCH && $CI_OPEN_MERGE_REQUESTS == null'
    # MR pipelines
    - if: '$CI_OPEN_MERGE_REQUESTS != null && $CI_PIPELINE_SOURCE == "web"'
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event" || $CI_PIPELINE_SOURCE == "web"'
    # Prevent duplicate MR && branch pipelines
    - if: '$CI_COMMIT_BRANCH && $CI_OPEN_MERGE_REQUESTS'
      when: never

  manual-web_always:
    # branch pipelines
    - if: '$CI_COMMIT_BRANCH && $CI_OPEN_MERGE_REQUESTS == null && $CI_PIPELINE_SOURCE == "web"'
    - if: '$CI_COMMIT_BRANCH && $CI_OPEN_MERGE_REQUESTS == null'
      when: manual
    # MR pipelines
    - if: '$CI_OPEN_MERGE_REQUESTS != null && $CI_PIPELINE_SOURCE == "web"'
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event" || $CI_PIPELINE_SOURCE == "web"'
      when: manual
    # Prevent duplicate MR && branch pipelines
    - if: '$CI_COMMIT_BRANCH && $CI_OPEN_MERGE_REQUESTS && $CI_PIPELINE_SOURCE != "web"'
      when: never


.run-on-selfhosted-runner:
  tags:
    - flarenetworks

.test-node:
  stage: test
  image: node:18
  timeout: 3h
  rules:
  - !reference [.rules, always]
  cache:
    - key:
        files:
          - yarn.lock
      paths:
        - .yarn-cache/
        - node_modules/
      policy: pull-push


.test-node-sc:
  extends: .test-node
  variables:
    DEPLOYER_PRIVATE_KEY: "0xc5e8f61d1ab959b397eecc0a37a6517b8e67a0e7cf1f4bce5591f3ed80199122"
    GENESIS_GOVERNANCE_PRIVATE_KEY: "0x50777f5a3ce16445e63411bf1e865a2a11d5ca3c4cbc1de00808a52180bd8d3c"
    GOVERNANCE_PRIVATE_KEY: "0xd49743deccbccc5dc7baa8e69e5be03298da8688a15dd202e20f15d5e0e9a9fb"
    GOVERNANCE_PUBLIC_KEY: "0xeAD9C93b79Ae7C1591b1FB5323BD777E86e150d4"
    GOVERNANCE_EXECUTOR_PUBLIC_KEY: "0xE5904695748fe4A84b40b3fc79De2277660BD1D3"
  needs:
    - build-smart-contracts
    - job: run-tests
      optional: true
  dependencies:
    - build-smart-contracts
  before_script:
    - yarn install --frozen-lockfile --cache-folder $YARN_CACHE_DIR


run-tests:
  stage: .pre
  image: busybox
  rules:
  - !reference [.rules, manual-web_always]
  script: [ "true" ]


build-smart-contracts:
  stage: build
  needs: []
  image: node:18
  before_script:
    - yarn install --frozen-lockfile --cache-folder $YARN_CACHE_DIR
  script:
    - yarn c
  cache:
    - key:
        files:
          - yarn.lock
      paths:
        - .yarn-cache/
        - node_modules/
      policy: pull-push
  rules:
  - !reference [.rules, manual-web_always]
  artifacts:
    paths:
      - typechain
      - typechain-truffle
      - typechain-web3
      - node_modules
    expire_in: 1 week


### Jobs
test-unit:
  extends: .test-node-sc
  parallel:
    matrix:
    - TEST_PATH:
      - ./test/unit/protocol
      - ./test/unit/mock
  script:
    - yarn hardhat test --network hardhat ${TEST_ARG}

test-linter:
  extends: .test-node-sc
  script:
    - yarn lint

test-slither-check:
  extends: .test-node-sc
  variables:
    PIP_BREAK_SYSTEM_PACKAGES: "1"
  before_script:
    - apt update
    - apt install -y python3-pip
    - pip3 install slither-analyzer
    - yarn install --frozen-lockfile --cache-folder $YARN_CACHE_DIR
  script:
    - yarn slither
  # artifacts:
  #     when: always
  #     name: "$CI_JOB_NAME"
  #     paths:
  #         - slither_badge.json
  #     expire_in: 1 week


test-unit-forge:
  stage: forge
  needs:
    - build-smart-contracts
  image: ghcr.io/foundry-rs/foundry
  before_script:
    - forge install
  parallel:
    matrix:
    - TEST_ARG:
      - ./test-forge/protocol/implementation/EntityManager.t.sol
      - ./test-forge/mock/CustomErrorRevert.t.sol
  script:
    - forge test --match-path ${TEST_ARG} -vvv

