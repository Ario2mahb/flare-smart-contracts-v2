{
  "name": "flare-smart-contracts-v2",
  "version": "0.0.1",
  "description": "Smart contracts implementing Top level protocol on Flare Network.",
  "main": "",
  "repository": {
    "type": "git",
    "url": "git+https://gitlab.com/flarenetwork/flare-smart-contracts-v2.git"
  },
  "engines": {
    "node": ">=18 <20"
  },
  "author": "Flare SC team",
  "license": "MIT",
  "directories": {},
  "scripts": {
    "---------TEST---SCRIPTS": "",
    "test_unit_hh": "env TEST_PATH=./test/unit yarn hardhat test --network hardhat",
    "test_integration_hh": "env TEST_PATH=./test/integration yarn hardhat test --network hardhat",
    "coverage": "yarn hardhat coverage --solcoverjs ./.solcover.js --testfiles \"test\"",
    "coverage-forge": "forge coverage --report lcov && genhtml lcov.info --branch-coverage --output-dir coverage-forge",
    "---------COMPILE---SCRIPTS": "",
    "compile": "yarn hardhat compile && yarn typechain-ethers-v6 && yarn typechain-truffle-v5 && yarn typechain-web3-v1",
    "c": "yarn compile",
    "typechain-ethers-v6": "yarn typechain --target=ethers-v6 --out-dir typechain \"artifacts/!(build-info)/**/+([a-zA-Z0-9_]).json\" 1> nul",
    "typechain-truffle-v5": "yarn typechain --target=truffle-v5 --out-dir typechain-truffle \"artifacts/!(build-info)/**/+([a-zA-Z0-9_]).json\" 1> nul",
    "typechain-web3-v1": "yarn typechain --target=web3-v1 --out-dir typechain-web3 \"artifacts/!(build-info)/**/+([a-zA-Z0-9_]).json\" 1> nul",
    "lint": "yarn solhint \"contracts/**/*.sol\"",
    "lint-forge": "yarn solhint \"test-forge/**/*.sol\"",
    "typechain-prepare": "env bash scripts/remove-flattened-duplicates.sh",
    "flatten-flare-sc": "yarn flatten-dependencies node_modules/flare-smart-contracts scripts/flatten-files.txt flattened/FlareSmartContracts.sol scripts/flatten-extra-imports.txt",
    "flatten-dependencies": "env bash scripts/flatten-dependencies.sh",
    "slither": "pip3 install slither-analyzer && rm -f ./slither.json && rm -f ./slither_badge.json 2> /dev/null; slither . --compile-force-framework hardhat --json=./slither.json 2> /dev/null || true; node scripts/slither-parse.js ./slither.json",
    "generate-parameter-schema": "typescript-json-schema deployment/chain-config/chain-parameters.ts ChainParameters -o deployment/chain-config/chain-parameters.json --noExtraProps --required --strictNullChecks",
    "---------DEPLOY---SCRIPTS": "",
    "deploy_submission_contract_network_flare": "env CHAIN_CONFIG=flare yarn --silent hardhat --network flare deploy-submission-contract > ./deployment/deploys/flare.json",
    "deploy_submission_contract_network_coston2": "env CHAIN_CONFIG=coston2 yarn --silent hardhat --network coston2 deploy-submission-contract > ./deployment/deploys/coston2.json",
    "deploy_submission_contract_network_songbird": "env CHAIN_CONFIG=songbird yarn --silent hardhat --network songbird deploy-submission-contract > ./deployment/deploys/songbird.json",
    "deploy_submission_contract_network_coston": "env CHAIN_CONFIG=coston yarn --silent hardhat --network coston deploy-submission-contract > ./deployment/deploys/coston.json",
    "deploy_submission_contract_local_scdev": "env CHAIN_CONFIG=scdev yarn --silent hardhat --network scdev deploy-submission-contract > ./deployment/deploys/scdev.json",
    "deploy_submission_contract_local_hardhat": "env CHAIN_CONFIG=scdev yarn --silent hardhat --network localhost deploy-submission-contract > ./deployment/deploys/scdev.json",
    "deploy_contracts_network_coston": "env CHAIN_CONFIG=coston yarn --silent hardhat --network coston deploy-contracts > ./deployment/deploys/costonTmp.json && mv ./deployment/deploys/costonTmp.json ./deployment/deploys/coston.json",
    "deploy_contracts_local_scdev": "env CHAIN_CONFIG=scdev yarn --silent hardhat --network scdev deploy-contracts > ./deployment/deploys/scdevTmp.json && mv ./deployment/deploys/scdevTmp.json ./deployment/deploys/scdev.json",
    "deploy_contracts_local_hardhat": "env CHAIN_CONFIG=scdev yarn --silent hardhat --network localhost deploy-contracts > ./deployment/deploys/scdevTmp.json && mv ./deployment/deploys/scdevTmp.json ./deployment/deploys/scdev.json",
    "daemonize_contracts_local_scdev": "env CHAIN_CONFIG=scdev yarn --silent hardhat --network scdev daemonize-contracts",
    "daemonize_contracts_local_hardhat": "env CHAIN_CONFIG=scdev yarn --silent hardhat --network localhost daemonize-contracts",
    "set_inflation_receivers_local_scdev": "env CHAIN_CONFIG=scdev yarn --silent hardhat --network scdev set-inflation-receivers",
    "set_inflation_receivers_local_hardhat": "env CHAIN_CONFIG=scdev yarn --silent hardhat --network localhost set-inflation-receivers",
    "switch_to_production_mode_network_coston": "env CHAIN_CONFIG=coston yarn --silent hardhat --network coston switch-to-production-mode",
    "switch_to_production_mode_local_scdev": "env CHAIN_CONFIG=scdev yarn --silent hardhat --network scdev switch-to-production-mode",
    "switch_to_production_mode_local_hardhat": "env CHAIN_CONFIG=scdev yarn --silent hardhat --network localhost switch-to-production-mode",
    "full_deploy_local_scdev": "yarn c && yarn deploy_submission_contract_local_scdev && yarn deploy_contracts_local_scdev && yarn daemonize_contracts_local_scdev && yarn set_inflation_receivers_local_scdev",
    "full_deploy_local_hardhat": "yarn c && yarn deploy_submission_contract_local_hardhat && yarn deploy_contracts_local_hardhat && yarn daemonize_contracts_local_hardhat && yarn set_inflation_receivers_local_hardhat",
    "transfer_and_wrap_funds_local_scdev": "env CHAIN_CONFIG=scdev yarn --silent hardhat --network scdev transfer-and-wrap-funds",
    "transfer_and_wrap_funds_local_hardhat": "env CHAIN_CONFIG=scdev yarn --silent hardhat --network localhost transfer-and-wrap-funds",
    "register_entities_local_scdev": "env CHAIN_CONFIG=scdev yarn --silent hardhat --network scdev register-entities",
    "register_entities_local_hardhat": "env CHAIN_CONFIG=scdev yarn --silent hardhat --network localhost register-entities",
    "provide_random_number_for_initial_reward_epoch_local_scdev": "env CHAIN_CONFIG=scdev yarn --silent hardhat --network scdev provide-random-number-for-initial-reward-epoch",
    "provide_random_number_for_initial_reward_epoch_local_hardhat": "env CHAIN_CONFIG=scdev yarn --silent hardhat --network localhost provide-random-number-for-initial-reward-epoch --trigger true",
    "---------SIMULATION---SCRIPTS": "",
    "sim-node": "yarn hardhat node",
    "sim-run": "yarn hardhat run-simulation --network local",
    "sim-sign": "yarn hardhat run scripts/libs/mock/run-signer-emulators.ts --network local",
    "sim-fin": "yarn hardhat run scripts/libs/mock/run-mock-finalizer.ts --network local"
  },
  "dependencies": {
    "@openzeppelin/contracts": "^5.0.0",
    "@typescript-eslint/eslint-plugin": "^6.13.2",
    "@typescript-eslint/parser": "^6.13.2",
    "ethers": "^6.9.0",
    "flare-smart-contracts": "git+https://gitlab.com/flarenetwork/flare-smart-contracts.git",
    "hardhat": "^2.19.1",
    "solhint": "4.0.0"
  },
  "devDependencies": {
    "@coverage.rocks/genhtml": "1.16.0",
    "@gnosis.pm/mock-contract": "4.0.0",
    "@nomicfoundation/hardhat-chai-matchers": "^2.0.2",
    "@nomicfoundation/hardhat-ethers": "^3.0.5",
    "@nomicfoundation/hardhat-network-helpers": "^1.0.9",
    "@nomicfoundation/hardhat-toolbox": "^4.0.0",
    "@nomicfoundation/hardhat-verify": "^2.0.1",
    "@nomiclabs/hardhat-ethers": "^2.2.3",
    "@nomiclabs/hardhat-truffle5": "^2.0.7",
    "@nomiclabs/hardhat-web3": "^2.0.0",
    "@openzeppelin/test-helpers": "^0.5.16",
    "@typechain/ethers-v6": "^0.5.1",
    "@typechain/hardhat": "^9.1.0",
    "@typechain/truffle-v5": "^8.0.7",
    "@typechain/web3-v1": "^6.0.7",
    "@types/chai": "^4.3.11",
    "@types/elliptic": "6.4.18",
    "@types/mocha": "^10.0.6",
    "@types/node": "20.10.3",
    "elliptic": "6.5.4",
    "pascal-case": "3.1.2",
    "sqlite3": "^5.1.6",
    "solidity-coverage": "^0.8.5",
    "ts-node": "^10.9.1",
    "typechain": "^8.3.2",
    "typeorm": "^0.3.17",
    "typescript": "^5.3.2",
    "typescript-json-schema": "0.62.0",
    "winston": "^3.10.0"
  },
  "prettier": {
    "printWidth": 120,
    "semi": true,
    "singleQuote": false,
    "trailingComma": "es5",
    "tabWidth": 2,
    "arrowParens": "avoid"
  }
}
